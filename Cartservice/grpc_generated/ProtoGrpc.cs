// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto.proto
// </auto-generated>
// Original file comments:
// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace SdccFoodDelivery {
  public static partial class OrderService
  {
    static readonly string __ServiceName = "sdccFoodDelivery.OrderService";

    static readonly grpc::Marshaller<global::SdccFoodDelivery.AddItemRequest> __Marshaller_sdccFoodDelivery_AddItemRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.AddItemRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.Empty> __Marshaller_sdccFoodDelivery_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.GetCartRequest> __Marshaller_sdccFoodDelivery_GetCartRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.GetCartRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.Cart> __Marshaller_sdccFoodDelivery_Cart = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.Cart.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.EmptyCartRequest> __Marshaller_sdccFoodDelivery_EmptyCartRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.EmptyCartRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::SdccFoodDelivery.AddItemRequest, global::SdccFoodDelivery.Empty> __Method_AddItem = new grpc::Method<global::SdccFoodDelivery.AddItemRequest, global::SdccFoodDelivery.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddItem",
        __Marshaller_sdccFoodDelivery_AddItemRequest,
        __Marshaller_sdccFoodDelivery_Empty);

    static readonly grpc::Method<global::SdccFoodDelivery.GetCartRequest, global::SdccFoodDelivery.Cart> __Method_GetCart = new grpc::Method<global::SdccFoodDelivery.GetCartRequest, global::SdccFoodDelivery.Cart>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCart",
        __Marshaller_sdccFoodDelivery_GetCartRequest,
        __Marshaller_sdccFoodDelivery_Cart);

    static readonly grpc::Method<global::SdccFoodDelivery.EmptyCartRequest, global::SdccFoodDelivery.Empty> __Method_EmptyCart = new grpc::Method<global::SdccFoodDelivery.EmptyCartRequest, global::SdccFoodDelivery.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EmptyCart",
        __Marshaller_sdccFoodDelivery_EmptyCartRequest,
        __Marshaller_sdccFoodDelivery_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::SdccFoodDelivery.ProtoReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of OrderService</summary>
    [grpc::BindServiceMethod(typeof(OrderService), "BindService")]
    public abstract partial class OrderServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.Empty> AddItem(global::SdccFoodDelivery.AddItemRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.Cart> GetCart(global::SdccFoodDelivery.GetCartRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.Empty> EmptyCart(global::SdccFoodDelivery.EmptyCartRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for OrderService</summary>
    public partial class OrderServiceClient : grpc::ClientBase<OrderServiceClient>
    {
      /// <summary>Creates a new client for OrderService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public OrderServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for OrderService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public OrderServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected OrderServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected OrderServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::SdccFoodDelivery.Empty AddItem(global::SdccFoodDelivery.AddItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddItem(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SdccFoodDelivery.Empty AddItem(global::SdccFoodDelivery.AddItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddItem, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.Empty> AddItemAsync(global::SdccFoodDelivery.AddItemRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddItemAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.Empty> AddItemAsync(global::SdccFoodDelivery.AddItemRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddItem, null, options, request);
      }
      public virtual global::SdccFoodDelivery.Cart GetCart(global::SdccFoodDelivery.GetCartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCart(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SdccFoodDelivery.Cart GetCart(global::SdccFoodDelivery.GetCartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCart, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.Cart> GetCartAsync(global::SdccFoodDelivery.GetCartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.Cart> GetCartAsync(global::SdccFoodDelivery.GetCartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCart, null, options, request);
      }
      public virtual global::SdccFoodDelivery.Empty EmptyCart(global::SdccFoodDelivery.EmptyCartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EmptyCart(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SdccFoodDelivery.Empty EmptyCart(global::SdccFoodDelivery.EmptyCartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EmptyCart, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.Empty> EmptyCartAsync(global::SdccFoodDelivery.EmptyCartRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EmptyCartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.Empty> EmptyCartAsync(global::SdccFoodDelivery.EmptyCartRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EmptyCart, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override OrderServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new OrderServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(OrderServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddItem, serviceImpl.AddItem)
          .AddMethod(__Method_GetCart, serviceImpl.GetCart)
          .AddMethod(__Method_EmptyCart, serviceImpl.EmptyCart).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, OrderServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.AddItemRequest, global::SdccFoodDelivery.Empty>(serviceImpl.AddItem));
      serviceBinder.AddMethod(__Method_GetCart, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.GetCartRequest, global::SdccFoodDelivery.Cart>(serviceImpl.GetCart));
      serviceBinder.AddMethod(__Method_EmptyCart, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.EmptyCartRequest, global::SdccFoodDelivery.Empty>(serviceImpl.EmptyCart));
    }

  }
  public static partial class checkoutService
  {
    static readonly string __ServiceName = "sdccFoodDelivery.checkoutService";

    static readonly grpc::Marshaller<global::SdccFoodDelivery.TransactionInfo> __Marshaller_sdccFoodDelivery_TransactionInfo = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.TransactionInfo.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.TransactionOutcome> __Marshaller_sdccFoodDelivery_TransactionOutcome = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.TransactionOutcome.Parser.ParseFrom);

    static readonly grpc::Method<global::SdccFoodDelivery.TransactionInfo, global::SdccFoodDelivery.TransactionOutcome> __Method_executeTransaction = new grpc::Method<global::SdccFoodDelivery.TransactionInfo, global::SdccFoodDelivery.TransactionOutcome>(
        grpc::MethodType.Unary,
        __ServiceName,
        "executeTransaction",
        __Marshaller_sdccFoodDelivery_TransactionInfo,
        __Marshaller_sdccFoodDelivery_TransactionOutcome);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::SdccFoodDelivery.ProtoReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of checkoutService</summary>
    [grpc::BindServiceMethod(typeof(checkoutService), "BindService")]
    public abstract partial class checkoutServiceBase
    {
      /// <summary>
      ///ask for a name restaurants infos
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.TransactionOutcome> executeTransaction(global::SdccFoodDelivery.TransactionInfo request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for checkoutService</summary>
    public partial class checkoutServiceClient : grpc::ClientBase<checkoutServiceClient>
    {
      /// <summary>Creates a new client for checkoutService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public checkoutServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for checkoutService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public checkoutServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected checkoutServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected checkoutServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///ask for a name restaurants infos
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::SdccFoodDelivery.TransactionOutcome executeTransaction(global::SdccFoodDelivery.TransactionInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return executeTransaction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///ask for a name restaurants infos
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::SdccFoodDelivery.TransactionOutcome executeTransaction(global::SdccFoodDelivery.TransactionInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_executeTransaction, null, options, request);
      }
      /// <summary>
      ///ask for a name restaurants infos
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.TransactionOutcome> executeTransactionAsync(global::SdccFoodDelivery.TransactionInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return executeTransactionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///ask for a name restaurants infos
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.TransactionOutcome> executeTransactionAsync(global::SdccFoodDelivery.TransactionInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_executeTransaction, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override checkoutServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new checkoutServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(checkoutServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_executeTransaction, serviceImpl.executeTransaction).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, checkoutServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_executeTransaction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.TransactionInfo, global::SdccFoodDelivery.TransactionOutcome>(serviceImpl.executeTransaction));
    }

  }
  public static partial class restaurantService
  {
    static readonly string __ServiceName = "sdccFoodDelivery.restaurantService";

    static readonly grpc::Marshaller<global::SdccFoodDelivery.RestaurantRequestName> __Marshaller_sdccFoodDelivery_RestaurantRequestName = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.RestaurantRequestName.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.RestaurantMessage> __Marshaller_sdccFoodDelivery_RestaurantMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.RestaurantMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.RestaurantRequestAddress> __Marshaller_sdccFoodDelivery_RestaurantRequestAddress = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.RestaurantRequestAddress.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.RestaurantRequestCity> __Marshaller_sdccFoodDelivery_RestaurantRequestCity = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.RestaurantRequestCity.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.RestaurantRequestTAG> __Marshaller_sdccFoodDelivery_RestaurantRequestTAG = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.RestaurantRequestTAG.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.RestaurantRequestID> __Marshaller_sdccFoodDelivery_RestaurantRequestID = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.RestaurantRequestID.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.RestaurantMessageMenu> __Marshaller_sdccFoodDelivery_RestaurantMessageMenu = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.RestaurantMessageMenu.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.RestaurantsRequest> __Marshaller_sdccFoodDelivery_RestaurantsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.RestaurantsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.DeleteRestaurantRequest> __Marshaller_sdccFoodDelivery_DeleteRestaurantRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.DeleteRestaurantRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.CommitOK> __Marshaller_sdccFoodDelivery_CommitOK = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.CommitOK.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.ModifyRestaurantRequest> __Marshaller_sdccFoodDelivery_ModifyRestaurantRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.ModifyRestaurantRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.AddRestaurantRequest> __Marshaller_sdccFoodDelivery_AddRestaurantRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.AddRestaurantRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.ModifyRestaurantMenuRequest> __Marshaller_sdccFoodDelivery_ModifyRestaurantMenuRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.ModifyRestaurantMenuRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::SdccFoodDelivery.RestaurantRequestName, global::SdccFoodDelivery.RestaurantMessage> __Method_getRestaurantInfoByName = new grpc::Method<global::SdccFoodDelivery.RestaurantRequestName, global::SdccFoodDelivery.RestaurantMessage>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "getRestaurantInfoByName",
        __Marshaller_sdccFoodDelivery_RestaurantRequestName,
        __Marshaller_sdccFoodDelivery_RestaurantMessage);

    static readonly grpc::Method<global::SdccFoodDelivery.RestaurantRequestAddress, global::SdccFoodDelivery.RestaurantMessage> __Method_getRestaurantInfoByAddress = new grpc::Method<global::SdccFoodDelivery.RestaurantRequestAddress, global::SdccFoodDelivery.RestaurantMessage>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "getRestaurantInfoByAddress",
        __Marshaller_sdccFoodDelivery_RestaurantRequestAddress,
        __Marshaller_sdccFoodDelivery_RestaurantMessage);

    static readonly grpc::Method<global::SdccFoodDelivery.RestaurantRequestCity, global::SdccFoodDelivery.RestaurantMessage> __Method_getRestaurantInfoByCity = new grpc::Method<global::SdccFoodDelivery.RestaurantRequestCity, global::SdccFoodDelivery.RestaurantMessage>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "getRestaurantInfoByCity",
        __Marshaller_sdccFoodDelivery_RestaurantRequestCity,
        __Marshaller_sdccFoodDelivery_RestaurantMessage);

    static readonly grpc::Method<global::SdccFoodDelivery.RestaurantRequestTAG, global::SdccFoodDelivery.RestaurantMessage> __Method_getRestaurantInfoByTAG = new grpc::Method<global::SdccFoodDelivery.RestaurantRequestTAG, global::SdccFoodDelivery.RestaurantMessage>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "getRestaurantInfoByTAG",
        __Marshaller_sdccFoodDelivery_RestaurantRequestTAG,
        __Marshaller_sdccFoodDelivery_RestaurantMessage);

    static readonly grpc::Method<global::SdccFoodDelivery.RestaurantRequestID, global::SdccFoodDelivery.RestaurantMessageMenu> __Method_getRestaurantMenu = new grpc::Method<global::SdccFoodDelivery.RestaurantRequestID, global::SdccFoodDelivery.RestaurantMessageMenu>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "getRestaurantMenu",
        __Marshaller_sdccFoodDelivery_RestaurantRequestID,
        __Marshaller_sdccFoodDelivery_RestaurantMessageMenu);

    static readonly grpc::Method<global::SdccFoodDelivery.RestaurantsRequest, global::SdccFoodDelivery.RestaurantMessage> __Method_getAllRestaurants = new grpc::Method<global::SdccFoodDelivery.RestaurantsRequest, global::SdccFoodDelivery.RestaurantMessage>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "getAllRestaurants",
        __Marshaller_sdccFoodDelivery_RestaurantsRequest,
        __Marshaller_sdccFoodDelivery_RestaurantMessage);

    static readonly grpc::Method<global::SdccFoodDelivery.RestaurantRequestID, global::SdccFoodDelivery.RestaurantMessage> __Method_getRestaurantInfoById = new grpc::Method<global::SdccFoodDelivery.RestaurantRequestID, global::SdccFoodDelivery.RestaurantMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getRestaurantInfoById",
        __Marshaller_sdccFoodDelivery_RestaurantRequestID,
        __Marshaller_sdccFoodDelivery_RestaurantMessage);

    static readonly grpc::Method<global::SdccFoodDelivery.DeleteRestaurantRequest, global::SdccFoodDelivery.CommitOK> __Method_deleteRestaurant = new grpc::Method<global::SdccFoodDelivery.DeleteRestaurantRequest, global::SdccFoodDelivery.CommitOK>(
        grpc::MethodType.Unary,
        __ServiceName,
        "deleteRestaurant",
        __Marshaller_sdccFoodDelivery_DeleteRestaurantRequest,
        __Marshaller_sdccFoodDelivery_CommitOK);

    static readonly grpc::Method<global::SdccFoodDelivery.ModifyRestaurantRequest, global::SdccFoodDelivery.CommitOK> __Method_modifyRestaurant = new grpc::Method<global::SdccFoodDelivery.ModifyRestaurantRequest, global::SdccFoodDelivery.CommitOK>(
        grpc::MethodType.Unary,
        __ServiceName,
        "modifyRestaurant",
        __Marshaller_sdccFoodDelivery_ModifyRestaurantRequest,
        __Marshaller_sdccFoodDelivery_CommitOK);

    static readonly grpc::Method<global::SdccFoodDelivery.AddRestaurantRequest, global::SdccFoodDelivery.CommitOK> __Method_addRestaurant = new grpc::Method<global::SdccFoodDelivery.AddRestaurantRequest, global::SdccFoodDelivery.CommitOK>(
        grpc::MethodType.Unary,
        __ServiceName,
        "addRestaurant",
        __Marshaller_sdccFoodDelivery_AddRestaurantRequest,
        __Marshaller_sdccFoodDelivery_CommitOK);

    static readonly grpc::Method<global::SdccFoodDelivery.ModifyRestaurantMenuRequest, global::SdccFoodDelivery.CommitOK> __Method_modifyRestaurantMenu = new grpc::Method<global::SdccFoodDelivery.ModifyRestaurantMenuRequest, global::SdccFoodDelivery.CommitOK>(
        grpc::MethodType.Unary,
        __ServiceName,
        "modifyRestaurantMenu",
        __Marshaller_sdccFoodDelivery_ModifyRestaurantMenuRequest,
        __Marshaller_sdccFoodDelivery_CommitOK);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::SdccFoodDelivery.ProtoReflection.Descriptor.Services[2]; }
    }

    /// <summary>Base class for server-side implementations of restaurantService</summary>
    [grpc::BindServiceMethod(typeof(restaurantService), "BindService")]
    public abstract partial class restaurantServiceBase
    {
      /// <summary>
      ///ask for a name restaurants infos
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      public virtual global::System.Threading.Tasks.Task getRestaurantInfoByName(global::SdccFoodDelivery.RestaurantRequestName request, grpc::IServerStreamWriter<global::SdccFoodDelivery.RestaurantMessage> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task getRestaurantInfoByAddress(global::SdccFoodDelivery.RestaurantRequestAddress request, grpc::IServerStreamWriter<global::SdccFoodDelivery.RestaurantMessage> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task getRestaurantInfoByCity(global::SdccFoodDelivery.RestaurantRequestCity request, grpc::IServerStreamWriter<global::SdccFoodDelivery.RestaurantMessage> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task getRestaurantInfoByTAG(global::SdccFoodDelivery.RestaurantRequestTAG request, grpc::IServerStreamWriter<global::SdccFoodDelivery.RestaurantMessage> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task getRestaurantMenu(global::SdccFoodDelivery.RestaurantRequestID request, grpc::IServerStreamWriter<global::SdccFoodDelivery.RestaurantMessageMenu> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task getAllRestaurants(global::SdccFoodDelivery.RestaurantsRequest request, grpc::IServerStreamWriter<global::SdccFoodDelivery.RestaurantMessage> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.RestaurantMessage> getRestaurantInfoById(global::SdccFoodDelivery.RestaurantRequestID request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///delete restaurant by id
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.CommitOK> deleteRestaurant(global::SdccFoodDelivery.DeleteRestaurantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///modify restaurant by ID
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.CommitOK> modifyRestaurant(global::SdccFoodDelivery.ModifyRestaurantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///add new restaurant
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.CommitOK> addRestaurant(global::SdccFoodDelivery.AddRestaurantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Modify restaurant's menu
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.CommitOK> modifyRestaurantMenu(global::SdccFoodDelivery.ModifyRestaurantMenuRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for restaurantService</summary>
    public partial class restaurantServiceClient : grpc::ClientBase<restaurantServiceClient>
    {
      /// <summary>Creates a new client for restaurantService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public restaurantServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for restaurantService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public restaurantServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected restaurantServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected restaurantServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///ask for a name restaurants infos
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::SdccFoodDelivery.RestaurantMessage> getRestaurantInfoByName(global::SdccFoodDelivery.RestaurantRequestName request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getRestaurantInfoByName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///ask for a name restaurants infos
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::SdccFoodDelivery.RestaurantMessage> getRestaurantInfoByName(global::SdccFoodDelivery.RestaurantRequestName request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_getRestaurantInfoByName, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::SdccFoodDelivery.RestaurantMessage> getRestaurantInfoByAddress(global::SdccFoodDelivery.RestaurantRequestAddress request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getRestaurantInfoByAddress(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::SdccFoodDelivery.RestaurantMessage> getRestaurantInfoByAddress(global::SdccFoodDelivery.RestaurantRequestAddress request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_getRestaurantInfoByAddress, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::SdccFoodDelivery.RestaurantMessage> getRestaurantInfoByCity(global::SdccFoodDelivery.RestaurantRequestCity request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getRestaurantInfoByCity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::SdccFoodDelivery.RestaurantMessage> getRestaurantInfoByCity(global::SdccFoodDelivery.RestaurantRequestCity request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_getRestaurantInfoByCity, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::SdccFoodDelivery.RestaurantMessage> getRestaurantInfoByTAG(global::SdccFoodDelivery.RestaurantRequestTAG request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getRestaurantInfoByTAG(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::SdccFoodDelivery.RestaurantMessage> getRestaurantInfoByTAG(global::SdccFoodDelivery.RestaurantRequestTAG request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_getRestaurantInfoByTAG, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::SdccFoodDelivery.RestaurantMessageMenu> getRestaurantMenu(global::SdccFoodDelivery.RestaurantRequestID request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getRestaurantMenu(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::SdccFoodDelivery.RestaurantMessageMenu> getRestaurantMenu(global::SdccFoodDelivery.RestaurantRequestID request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_getRestaurantMenu, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::SdccFoodDelivery.RestaurantMessage> getAllRestaurants(global::SdccFoodDelivery.RestaurantsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getAllRestaurants(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::SdccFoodDelivery.RestaurantMessage> getAllRestaurants(global::SdccFoodDelivery.RestaurantsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_getAllRestaurants, null, options, request);
      }
      public virtual global::SdccFoodDelivery.RestaurantMessage getRestaurantInfoById(global::SdccFoodDelivery.RestaurantRequestID request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getRestaurantInfoById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SdccFoodDelivery.RestaurantMessage getRestaurantInfoById(global::SdccFoodDelivery.RestaurantRequestID request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getRestaurantInfoById, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.RestaurantMessage> getRestaurantInfoByIdAsync(global::SdccFoodDelivery.RestaurantRequestID request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getRestaurantInfoByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.RestaurantMessage> getRestaurantInfoByIdAsync(global::SdccFoodDelivery.RestaurantRequestID request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getRestaurantInfoById, null, options, request);
      }
      /// <summary>
      ///delete restaurant by id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::SdccFoodDelivery.CommitOK deleteRestaurant(global::SdccFoodDelivery.DeleteRestaurantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteRestaurant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///delete restaurant by id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::SdccFoodDelivery.CommitOK deleteRestaurant(global::SdccFoodDelivery.DeleteRestaurantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_deleteRestaurant, null, options, request);
      }
      /// <summary>
      ///delete restaurant by id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.CommitOK> deleteRestaurantAsync(global::SdccFoodDelivery.DeleteRestaurantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteRestaurantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///delete restaurant by id
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.CommitOK> deleteRestaurantAsync(global::SdccFoodDelivery.DeleteRestaurantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_deleteRestaurant, null, options, request);
      }
      /// <summary>
      ///modify restaurant by ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::SdccFoodDelivery.CommitOK modifyRestaurant(global::SdccFoodDelivery.ModifyRestaurantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return modifyRestaurant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///modify restaurant by ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::SdccFoodDelivery.CommitOK modifyRestaurant(global::SdccFoodDelivery.ModifyRestaurantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_modifyRestaurant, null, options, request);
      }
      /// <summary>
      ///modify restaurant by ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.CommitOK> modifyRestaurantAsync(global::SdccFoodDelivery.ModifyRestaurantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return modifyRestaurantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///modify restaurant by ID
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.CommitOK> modifyRestaurantAsync(global::SdccFoodDelivery.ModifyRestaurantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_modifyRestaurant, null, options, request);
      }
      /// <summary>
      ///add new restaurant
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::SdccFoodDelivery.CommitOK addRestaurant(global::SdccFoodDelivery.AddRestaurantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return addRestaurant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///add new restaurant
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::SdccFoodDelivery.CommitOK addRestaurant(global::SdccFoodDelivery.AddRestaurantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_addRestaurant, null, options, request);
      }
      /// <summary>
      ///add new restaurant
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.CommitOK> addRestaurantAsync(global::SdccFoodDelivery.AddRestaurantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return addRestaurantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///add new restaurant
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.CommitOK> addRestaurantAsync(global::SdccFoodDelivery.AddRestaurantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_addRestaurant, null, options, request);
      }
      /// <summary>
      ///Modify restaurant's menu
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::SdccFoodDelivery.CommitOK modifyRestaurantMenu(global::SdccFoodDelivery.ModifyRestaurantMenuRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return modifyRestaurantMenu(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Modify restaurant's menu
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::SdccFoodDelivery.CommitOK modifyRestaurantMenu(global::SdccFoodDelivery.ModifyRestaurantMenuRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_modifyRestaurantMenu, null, options, request);
      }
      /// <summary>
      ///Modify restaurant's menu
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.CommitOK> modifyRestaurantMenuAsync(global::SdccFoodDelivery.ModifyRestaurantMenuRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return modifyRestaurantMenuAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Modify restaurant's menu
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.CommitOK> modifyRestaurantMenuAsync(global::SdccFoodDelivery.ModifyRestaurantMenuRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_modifyRestaurantMenu, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override restaurantServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new restaurantServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(restaurantServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_getRestaurantInfoByName, serviceImpl.getRestaurantInfoByName)
          .AddMethod(__Method_getRestaurantInfoByAddress, serviceImpl.getRestaurantInfoByAddress)
          .AddMethod(__Method_getRestaurantInfoByCity, serviceImpl.getRestaurantInfoByCity)
          .AddMethod(__Method_getRestaurantInfoByTAG, serviceImpl.getRestaurantInfoByTAG)
          .AddMethod(__Method_getRestaurantMenu, serviceImpl.getRestaurantMenu)
          .AddMethod(__Method_getAllRestaurants, serviceImpl.getAllRestaurants)
          .AddMethod(__Method_getRestaurantInfoById, serviceImpl.getRestaurantInfoById)
          .AddMethod(__Method_deleteRestaurant, serviceImpl.deleteRestaurant)
          .AddMethod(__Method_modifyRestaurant, serviceImpl.modifyRestaurant)
          .AddMethod(__Method_addRestaurant, serviceImpl.addRestaurant)
          .AddMethod(__Method_modifyRestaurantMenu, serviceImpl.modifyRestaurantMenu).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, restaurantServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_getRestaurantInfoByName, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::SdccFoodDelivery.RestaurantRequestName, global::SdccFoodDelivery.RestaurantMessage>(serviceImpl.getRestaurantInfoByName));
      serviceBinder.AddMethod(__Method_getRestaurantInfoByAddress, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::SdccFoodDelivery.RestaurantRequestAddress, global::SdccFoodDelivery.RestaurantMessage>(serviceImpl.getRestaurantInfoByAddress));
      serviceBinder.AddMethod(__Method_getRestaurantInfoByCity, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::SdccFoodDelivery.RestaurantRequestCity, global::SdccFoodDelivery.RestaurantMessage>(serviceImpl.getRestaurantInfoByCity));
      serviceBinder.AddMethod(__Method_getRestaurantInfoByTAG, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::SdccFoodDelivery.RestaurantRequestTAG, global::SdccFoodDelivery.RestaurantMessage>(serviceImpl.getRestaurantInfoByTAG));
      serviceBinder.AddMethod(__Method_getRestaurantMenu, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::SdccFoodDelivery.RestaurantRequestID, global::SdccFoodDelivery.RestaurantMessageMenu>(serviceImpl.getRestaurantMenu));
      serviceBinder.AddMethod(__Method_getAllRestaurants, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::SdccFoodDelivery.RestaurantsRequest, global::SdccFoodDelivery.RestaurantMessage>(serviceImpl.getAllRestaurants));
      serviceBinder.AddMethod(__Method_getRestaurantInfoById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.RestaurantRequestID, global::SdccFoodDelivery.RestaurantMessage>(serviceImpl.getRestaurantInfoById));
      serviceBinder.AddMethod(__Method_deleteRestaurant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.DeleteRestaurantRequest, global::SdccFoodDelivery.CommitOK>(serviceImpl.deleteRestaurant));
      serviceBinder.AddMethod(__Method_modifyRestaurant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.ModifyRestaurantRequest, global::SdccFoodDelivery.CommitOK>(serviceImpl.modifyRestaurant));
      serviceBinder.AddMethod(__Method_addRestaurant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.AddRestaurantRequest, global::SdccFoodDelivery.CommitOK>(serviceImpl.addRestaurant));
      serviceBinder.AddMethod(__Method_modifyRestaurantMenu, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.ModifyRestaurantMenuRequest, global::SdccFoodDelivery.CommitOK>(serviceImpl.modifyRestaurantMenu));
    }

  }
  public static partial class sdcc_user_service
  {
    static readonly string __ServiceName = "sdccFoodDelivery.sdcc_user_service";

    static readonly grpc::Marshaller<global::SdccFoodDelivery.UserInfoMessage> __Marshaller_sdccFoodDelivery_UserInfoMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.UserInfoMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.BooleanMessage> __Marshaller_sdccFoodDelivery_BooleanMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.BooleanMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.IDMessage> __Marshaller_sdccFoodDelivery_IDMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.IDMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.UserMessage> __Marshaller_sdccFoodDelivery_UserMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.UserMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.LogInMessage> __Marshaller_sdccFoodDelivery_LogInMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.LogInMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.LogInResponse> __Marshaller_sdccFoodDelivery_LogInResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.LogInResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.UpdateUsernameMessage> __Marshaller_sdccFoodDelivery_UpdateUsernameMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.UpdateUsernameMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.UpdatePasswordMessage> __Marshaller_sdccFoodDelivery_UpdatePasswordMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.UpdatePasswordMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.UpdateAddressMessage> __Marshaller_sdccFoodDelivery_UpdateAddressMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.UpdateAddressMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.UpdateMailMessage> __Marshaller_sdccFoodDelivery_UpdateMailMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.UpdateMailMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.UpdatePaymentMessage> __Marshaller_sdccFoodDelivery_UpdatePaymentMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.UpdatePaymentMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.UpdatePreferitiMessage> __Marshaller_sdccFoodDelivery_UpdatePreferitiMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.UpdatePreferitiMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.PreferitiMessage> __Marshaller_sdccFoodDelivery_PreferitiMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.PreferitiMessage.Parser.ParseFrom);

    static readonly grpc::Method<global::SdccFoodDelivery.UserInfoMessage, global::SdccFoodDelivery.BooleanMessage> __Method_save = new grpc::Method<global::SdccFoodDelivery.UserInfoMessage, global::SdccFoodDelivery.BooleanMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "save",
        __Marshaller_sdccFoodDelivery_UserInfoMessage,
        __Marshaller_sdccFoodDelivery_BooleanMessage);

    static readonly grpc::Method<global::SdccFoodDelivery.IDMessage, global::SdccFoodDelivery.BooleanMessage> __Method_deleteByID = new grpc::Method<global::SdccFoodDelivery.IDMessage, global::SdccFoodDelivery.BooleanMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "deleteByID",
        __Marshaller_sdccFoodDelivery_IDMessage,
        __Marshaller_sdccFoodDelivery_BooleanMessage);

    static readonly grpc::Method<global::SdccFoodDelivery.IDMessage, global::SdccFoodDelivery.UserMessage> __Method_findByID = new grpc::Method<global::SdccFoodDelivery.IDMessage, global::SdccFoodDelivery.UserMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "findByID",
        __Marshaller_sdccFoodDelivery_IDMessage,
        __Marshaller_sdccFoodDelivery_UserMessage);

    static readonly grpc::Method<global::SdccFoodDelivery.LogInMessage, global::SdccFoodDelivery.LogInResponse> __Method_logIn = new grpc::Method<global::SdccFoodDelivery.LogInMessage, global::SdccFoodDelivery.LogInResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "logIn",
        __Marshaller_sdccFoodDelivery_LogInMessage,
        __Marshaller_sdccFoodDelivery_LogInResponse);

    static readonly grpc::Method<global::SdccFoodDelivery.UpdateUsernameMessage, global::SdccFoodDelivery.BooleanMessage> __Method_updateUsername = new grpc::Method<global::SdccFoodDelivery.UpdateUsernameMessage, global::SdccFoodDelivery.BooleanMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "updateUsername",
        __Marshaller_sdccFoodDelivery_UpdateUsernameMessage,
        __Marshaller_sdccFoodDelivery_BooleanMessage);

    static readonly grpc::Method<global::SdccFoodDelivery.UpdatePasswordMessage, global::SdccFoodDelivery.BooleanMessage> __Method_updatePassword = new grpc::Method<global::SdccFoodDelivery.UpdatePasswordMessage, global::SdccFoodDelivery.BooleanMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "updatePassword",
        __Marshaller_sdccFoodDelivery_UpdatePasswordMessage,
        __Marshaller_sdccFoodDelivery_BooleanMessage);

    static readonly grpc::Method<global::SdccFoodDelivery.UpdateAddressMessage, global::SdccFoodDelivery.BooleanMessage> __Method_updateAddress = new grpc::Method<global::SdccFoodDelivery.UpdateAddressMessage, global::SdccFoodDelivery.BooleanMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "updateAddress",
        __Marshaller_sdccFoodDelivery_UpdateAddressMessage,
        __Marshaller_sdccFoodDelivery_BooleanMessage);

    static readonly grpc::Method<global::SdccFoodDelivery.UpdateMailMessage, global::SdccFoodDelivery.BooleanMessage> __Method_updateMail = new grpc::Method<global::SdccFoodDelivery.UpdateMailMessage, global::SdccFoodDelivery.BooleanMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "updateMail",
        __Marshaller_sdccFoodDelivery_UpdateMailMessage,
        __Marshaller_sdccFoodDelivery_BooleanMessage);

    static readonly grpc::Method<global::SdccFoodDelivery.UpdatePaymentMessage, global::SdccFoodDelivery.BooleanMessage> __Method_updatePaymentMethod = new grpc::Method<global::SdccFoodDelivery.UpdatePaymentMessage, global::SdccFoodDelivery.BooleanMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "updatePaymentMethod",
        __Marshaller_sdccFoodDelivery_UpdatePaymentMessage,
        __Marshaller_sdccFoodDelivery_BooleanMessage);

    static readonly grpc::Method<global::SdccFoodDelivery.UpdatePreferitiMessage, global::SdccFoodDelivery.BooleanMessage> __Method_updatePreferiti = new grpc::Method<global::SdccFoodDelivery.UpdatePreferitiMessage, global::SdccFoodDelivery.BooleanMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "updatePreferiti",
        __Marshaller_sdccFoodDelivery_UpdatePreferitiMessage,
        __Marshaller_sdccFoodDelivery_BooleanMessage);

    static readonly grpc::Method<global::SdccFoodDelivery.IDMessage, global::SdccFoodDelivery.PreferitiMessage> __Method_getUserPreferitiByID = new grpc::Method<global::SdccFoodDelivery.IDMessage, global::SdccFoodDelivery.PreferitiMessage>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "getUserPreferitiByID",
        __Marshaller_sdccFoodDelivery_IDMessage,
        __Marshaller_sdccFoodDelivery_PreferitiMessage);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::SdccFoodDelivery.ProtoReflection.Descriptor.Services[3]; }
    }

    /// <summary>Base class for server-side implementations of sdcc_user_service</summary>
    [grpc::BindServiceMethod(typeof(sdcc_user_service), "BindService")]
    public abstract partial class sdcc_user_serviceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.BooleanMessage> save(global::SdccFoodDelivery.UserInfoMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.BooleanMessage> deleteByID(global::SdccFoodDelivery.IDMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.UserMessage> findByID(global::SdccFoodDelivery.IDMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.LogInResponse> logIn(global::SdccFoodDelivery.LogInMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.BooleanMessage> updateUsername(global::SdccFoodDelivery.UpdateUsernameMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.BooleanMessage> updatePassword(global::SdccFoodDelivery.UpdatePasswordMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.BooleanMessage> updateAddress(global::SdccFoodDelivery.UpdateAddressMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.BooleanMessage> updateMail(global::SdccFoodDelivery.UpdateMailMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.BooleanMessage> updatePaymentMethod(global::SdccFoodDelivery.UpdatePaymentMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.BooleanMessage> updatePreferiti(global::SdccFoodDelivery.UpdatePreferitiMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task getUserPreferitiByID(global::SdccFoodDelivery.IDMessage request, grpc::IServerStreamWriter<global::SdccFoodDelivery.PreferitiMessage> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for sdcc_user_service</summary>
    public partial class sdcc_user_serviceClient : grpc::ClientBase<sdcc_user_serviceClient>
    {
      /// <summary>Creates a new client for sdcc_user_service</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public sdcc_user_serviceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for sdcc_user_service that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public sdcc_user_serviceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected sdcc_user_serviceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected sdcc_user_serviceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::SdccFoodDelivery.BooleanMessage save(global::SdccFoodDelivery.UserInfoMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return save(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SdccFoodDelivery.BooleanMessage save(global::SdccFoodDelivery.UserInfoMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_save, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> saveAsync(global::SdccFoodDelivery.UserInfoMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return saveAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> saveAsync(global::SdccFoodDelivery.UserInfoMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_save, null, options, request);
      }
      public virtual global::SdccFoodDelivery.BooleanMessage deleteByID(global::SdccFoodDelivery.IDMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SdccFoodDelivery.BooleanMessage deleteByID(global::SdccFoodDelivery.IDMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_deleteByID, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> deleteByIDAsync(global::SdccFoodDelivery.IDMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return deleteByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> deleteByIDAsync(global::SdccFoodDelivery.IDMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_deleteByID, null, options, request);
      }
      public virtual global::SdccFoodDelivery.UserMessage findByID(global::SdccFoodDelivery.IDMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return findByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SdccFoodDelivery.UserMessage findByID(global::SdccFoodDelivery.IDMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_findByID, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.UserMessage> findByIDAsync(global::SdccFoodDelivery.IDMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return findByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.UserMessage> findByIDAsync(global::SdccFoodDelivery.IDMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_findByID, null, options, request);
      }
      public virtual global::SdccFoodDelivery.LogInResponse logIn(global::SdccFoodDelivery.LogInMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return logIn(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SdccFoodDelivery.LogInResponse logIn(global::SdccFoodDelivery.LogInMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_logIn, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.LogInResponse> logInAsync(global::SdccFoodDelivery.LogInMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return logInAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.LogInResponse> logInAsync(global::SdccFoodDelivery.LogInMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_logIn, null, options, request);
      }
      public virtual global::SdccFoodDelivery.BooleanMessage updateUsername(global::SdccFoodDelivery.UpdateUsernameMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateUsername(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SdccFoodDelivery.BooleanMessage updateUsername(global::SdccFoodDelivery.UpdateUsernameMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_updateUsername, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> updateUsernameAsync(global::SdccFoodDelivery.UpdateUsernameMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateUsernameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> updateUsernameAsync(global::SdccFoodDelivery.UpdateUsernameMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_updateUsername, null, options, request);
      }
      public virtual global::SdccFoodDelivery.BooleanMessage updatePassword(global::SdccFoodDelivery.UpdatePasswordMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updatePassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SdccFoodDelivery.BooleanMessage updatePassword(global::SdccFoodDelivery.UpdatePasswordMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_updatePassword, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> updatePasswordAsync(global::SdccFoodDelivery.UpdatePasswordMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updatePasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> updatePasswordAsync(global::SdccFoodDelivery.UpdatePasswordMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_updatePassword, null, options, request);
      }
      public virtual global::SdccFoodDelivery.BooleanMessage updateAddress(global::SdccFoodDelivery.UpdateAddressMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateAddress(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SdccFoodDelivery.BooleanMessage updateAddress(global::SdccFoodDelivery.UpdateAddressMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_updateAddress, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> updateAddressAsync(global::SdccFoodDelivery.UpdateAddressMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateAddressAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> updateAddressAsync(global::SdccFoodDelivery.UpdateAddressMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_updateAddress, null, options, request);
      }
      public virtual global::SdccFoodDelivery.BooleanMessage updateMail(global::SdccFoodDelivery.UpdateMailMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateMail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SdccFoodDelivery.BooleanMessage updateMail(global::SdccFoodDelivery.UpdateMailMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_updateMail, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> updateMailAsync(global::SdccFoodDelivery.UpdateMailMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updateMailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> updateMailAsync(global::SdccFoodDelivery.UpdateMailMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_updateMail, null, options, request);
      }
      public virtual global::SdccFoodDelivery.BooleanMessage updatePaymentMethod(global::SdccFoodDelivery.UpdatePaymentMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updatePaymentMethod(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SdccFoodDelivery.BooleanMessage updatePaymentMethod(global::SdccFoodDelivery.UpdatePaymentMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_updatePaymentMethod, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> updatePaymentMethodAsync(global::SdccFoodDelivery.UpdatePaymentMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updatePaymentMethodAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> updatePaymentMethodAsync(global::SdccFoodDelivery.UpdatePaymentMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_updatePaymentMethod, null, options, request);
      }
      public virtual global::SdccFoodDelivery.BooleanMessage updatePreferiti(global::SdccFoodDelivery.UpdatePreferitiMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updatePreferiti(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SdccFoodDelivery.BooleanMessage updatePreferiti(global::SdccFoodDelivery.UpdatePreferitiMessage request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_updatePreferiti, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> updatePreferitiAsync(global::SdccFoodDelivery.UpdatePreferitiMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return updatePreferitiAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> updatePreferitiAsync(global::SdccFoodDelivery.UpdatePreferitiMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_updatePreferiti, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::SdccFoodDelivery.PreferitiMessage> getUserPreferitiByID(global::SdccFoodDelivery.IDMessage request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getUserPreferitiByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::SdccFoodDelivery.PreferitiMessage> getUserPreferitiByID(global::SdccFoodDelivery.IDMessage request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_getUserPreferitiByID, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override sdcc_user_serviceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new sdcc_user_serviceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(sdcc_user_serviceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_save, serviceImpl.save)
          .AddMethod(__Method_deleteByID, serviceImpl.deleteByID)
          .AddMethod(__Method_findByID, serviceImpl.findByID)
          .AddMethod(__Method_logIn, serviceImpl.logIn)
          .AddMethod(__Method_updateUsername, serviceImpl.updateUsername)
          .AddMethod(__Method_updatePassword, serviceImpl.updatePassword)
          .AddMethod(__Method_updateAddress, serviceImpl.updateAddress)
          .AddMethod(__Method_updateMail, serviceImpl.updateMail)
          .AddMethod(__Method_updatePaymentMethod, serviceImpl.updatePaymentMethod)
          .AddMethod(__Method_updatePreferiti, serviceImpl.updatePreferiti)
          .AddMethod(__Method_getUserPreferitiByID, serviceImpl.getUserPreferitiByID).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, sdcc_user_serviceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_save, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.UserInfoMessage, global::SdccFoodDelivery.BooleanMessage>(serviceImpl.save));
      serviceBinder.AddMethod(__Method_deleteByID, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.IDMessage, global::SdccFoodDelivery.BooleanMessage>(serviceImpl.deleteByID));
      serviceBinder.AddMethod(__Method_findByID, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.IDMessage, global::SdccFoodDelivery.UserMessage>(serviceImpl.findByID));
      serviceBinder.AddMethod(__Method_logIn, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.LogInMessage, global::SdccFoodDelivery.LogInResponse>(serviceImpl.logIn));
      serviceBinder.AddMethod(__Method_updateUsername, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.UpdateUsernameMessage, global::SdccFoodDelivery.BooleanMessage>(serviceImpl.updateUsername));
      serviceBinder.AddMethod(__Method_updatePassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.UpdatePasswordMessage, global::SdccFoodDelivery.BooleanMessage>(serviceImpl.updatePassword));
      serviceBinder.AddMethod(__Method_updateAddress, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.UpdateAddressMessage, global::SdccFoodDelivery.BooleanMessage>(serviceImpl.updateAddress));
      serviceBinder.AddMethod(__Method_updateMail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.UpdateMailMessage, global::SdccFoodDelivery.BooleanMessage>(serviceImpl.updateMail));
      serviceBinder.AddMethod(__Method_updatePaymentMethod, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.UpdatePaymentMessage, global::SdccFoodDelivery.BooleanMessage>(serviceImpl.updatePaymentMethod));
      serviceBinder.AddMethod(__Method_updatePreferiti, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.UpdatePreferitiMessage, global::SdccFoodDelivery.BooleanMessage>(serviceImpl.updatePreferiti));
      serviceBinder.AddMethod(__Method_getUserPreferitiByID, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::SdccFoodDelivery.IDMessage, global::SdccFoodDelivery.PreferitiMessage>(serviceImpl.getUserPreferitiByID));
    }

  }
  public static partial class sdcc_mail_service
  {
    static readonly string __ServiceName = "sdccFoodDelivery.sdcc_mail_service";

    static readonly grpc::Marshaller<global::SdccFoodDelivery.SendMailRequest> __Marshaller_sdccFoodDelivery_SendMailRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.SendMailRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.BooleanMessage> __Marshaller_sdccFoodDelivery_BooleanMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.BooleanMessage.Parser.ParseFrom);

    static readonly grpc::Method<global::SdccFoodDelivery.SendMailRequest, global::SdccFoodDelivery.BooleanMessage> __Method_sendMail = new grpc::Method<global::SdccFoodDelivery.SendMailRequest, global::SdccFoodDelivery.BooleanMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "sendMail",
        __Marshaller_sdccFoodDelivery_SendMailRequest,
        __Marshaller_sdccFoodDelivery_BooleanMessage);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::SdccFoodDelivery.ProtoReflection.Descriptor.Services[4]; }
    }

    /// <summary>Base class for server-side implementations of sdcc_mail_service</summary>
    [grpc::BindServiceMethod(typeof(sdcc_mail_service), "BindService")]
    public abstract partial class sdcc_mail_serviceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.BooleanMessage> sendMail(global::SdccFoodDelivery.SendMailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for sdcc_mail_service</summary>
    public partial class sdcc_mail_serviceClient : grpc::ClientBase<sdcc_mail_serviceClient>
    {
      /// <summary>Creates a new client for sdcc_mail_service</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public sdcc_mail_serviceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for sdcc_mail_service that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public sdcc_mail_serviceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected sdcc_mail_serviceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected sdcc_mail_serviceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::SdccFoodDelivery.BooleanMessage sendMail(global::SdccFoodDelivery.SendMailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return sendMail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SdccFoodDelivery.BooleanMessage sendMail(global::SdccFoodDelivery.SendMailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_sendMail, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> sendMailAsync(global::SdccFoodDelivery.SendMailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return sendMailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.BooleanMessage> sendMailAsync(global::SdccFoodDelivery.SendMailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_sendMail, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override sdcc_mail_serviceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new sdcc_mail_serviceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(sdcc_mail_serviceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_sendMail, serviceImpl.sendMail).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, sdcc_mail_serviceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_sendMail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.SendMailRequest, global::SdccFoodDelivery.BooleanMessage>(serviceImpl.sendMail));
    }

  }
  public static partial class recommendationService
  {
    static readonly string __ServiceName = "sdccFoodDelivery.recommendationService";

    static readonly grpc::Marshaller<global::SdccFoodDelivery.getRecommendationsRequest> __Marshaller_sdccFoodDelivery_getRecommendationsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.getRecommendationsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SdccFoodDelivery.getRecommendationsResponse> __Marshaller_sdccFoodDelivery_getRecommendationsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SdccFoodDelivery.getRecommendationsResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::SdccFoodDelivery.getRecommendationsRequest, global::SdccFoodDelivery.getRecommendationsResponse> __Method_getRecommendations = new grpc::Method<global::SdccFoodDelivery.getRecommendationsRequest, global::SdccFoodDelivery.getRecommendationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getRecommendations",
        __Marshaller_sdccFoodDelivery_getRecommendationsRequest,
        __Marshaller_sdccFoodDelivery_getRecommendationsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::SdccFoodDelivery.ProtoReflection.Descriptor.Services[5]; }
    }

    /// <summary>Base class for server-side implementations of recommendationService</summary>
    [grpc::BindServiceMethod(typeof(recommendationService), "BindService")]
    public abstract partial class recommendationServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::SdccFoodDelivery.getRecommendationsResponse> getRecommendations(global::SdccFoodDelivery.getRecommendationsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for recommendationService</summary>
    public partial class recommendationServiceClient : grpc::ClientBase<recommendationServiceClient>
    {
      /// <summary>Creates a new client for recommendationService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public recommendationServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for recommendationService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public recommendationServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected recommendationServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected recommendationServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::SdccFoodDelivery.getRecommendationsResponse getRecommendations(global::SdccFoodDelivery.getRecommendationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getRecommendations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::SdccFoodDelivery.getRecommendationsResponse getRecommendations(global::SdccFoodDelivery.getRecommendationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getRecommendations, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.getRecommendationsResponse> getRecommendationsAsync(global::SdccFoodDelivery.getRecommendationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getRecommendationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::SdccFoodDelivery.getRecommendationsResponse> getRecommendationsAsync(global::SdccFoodDelivery.getRecommendationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getRecommendations, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override recommendationServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new recommendationServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(recommendationServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_getRecommendations, serviceImpl.getRecommendations).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, recommendationServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_getRecommendations, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SdccFoodDelivery.getRecommendationsRequest, global::SdccFoodDelivery.getRecommendationsResponse>(serviceImpl.getRecommendations));
    }

  }
}
#endregion
