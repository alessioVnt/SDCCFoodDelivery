# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import proto_pb2 as proto__pb2


class OrderServiceStub(object):
    """-----------------Cart service-----------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddItem = channel.unary_unary(
                '/sdccFoodDelivery.OrderService/AddItem',
                request_serializer=proto__pb2.AddItemRequest.SerializeToString,
                response_deserializer=proto__pb2.Empty.FromString,
                )
        self.GetCart = channel.unary_unary(
                '/sdccFoodDelivery.OrderService/GetCart',
                request_serializer=proto__pb2.GetCartRequest.SerializeToString,
                response_deserializer=proto__pb2.Cart.FromString,
                )
        self.EmptyCart = channel.unary_unary(
                '/sdccFoodDelivery.OrderService/EmptyCart',
                request_serializer=proto__pb2.EmptyCartRequest.SerializeToString,
                response_deserializer=proto__pb2.Empty.FromString,
                )


class OrderServiceServicer(object):
    """-----------------Cart service-----------------

    """

    def AddItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EmptyCart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddItem': grpc.unary_unary_rpc_method_handler(
                    servicer.AddItem,
                    request_deserializer=proto__pb2.AddItemRequest.FromString,
                    response_serializer=proto__pb2.Empty.SerializeToString,
            ),
            'GetCart': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCart,
                    request_deserializer=proto__pb2.GetCartRequest.FromString,
                    response_serializer=proto__pb2.Cart.SerializeToString,
            ),
            'EmptyCart': grpc.unary_unary_rpc_method_handler(
                    servicer.EmptyCart,
                    request_deserializer=proto__pb2.EmptyCartRequest.FromString,
                    response_serializer=proto__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sdccFoodDelivery.OrderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrderService(object):
    """-----------------Cart service-----------------

    """

    @staticmethod
    def AddItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.OrderService/AddItem',
            proto__pb2.AddItemRequest.SerializeToString,
            proto__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.OrderService/GetCart',
            proto__pb2.GetCartRequest.SerializeToString,
            proto__pb2.Cart.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EmptyCart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.OrderService/EmptyCart',
            proto__pb2.EmptyCartRequest.SerializeToString,
            proto__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class checkoutServiceStub(object):
    """-----------------CheckOut service-----------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.executeTransaction = channel.unary_unary(
                '/sdccFoodDelivery.checkoutService/executeTransaction',
                request_serializer=proto__pb2.TransactionInfo.SerializeToString,
                response_deserializer=proto__pb2.TransactionOutcome.FromString,
                )


class checkoutServiceServicer(object):
    """-----------------CheckOut service-----------------

    """

    def executeTransaction(self, request, context):
        """ask for a name restaurants infos
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_checkoutServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'executeTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.executeTransaction,
                    request_deserializer=proto__pb2.TransactionInfo.FromString,
                    response_serializer=proto__pb2.TransactionOutcome.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sdccFoodDelivery.checkoutService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class checkoutService(object):
    """-----------------CheckOut service-----------------

    """

    @staticmethod
    def executeTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.checkoutService/executeTransaction',
            proto__pb2.TransactionInfo.SerializeToString,
            proto__pb2.TransactionOutcome.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class restaurantServiceStub(object):
    """-----------------Restaurant service-----------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getRestaurantInfoByName = channel.unary_stream(
                '/sdccFoodDelivery.restaurantService/getRestaurantInfoByName',
                request_serializer=proto__pb2.RestaurantRequestName.SerializeToString,
                response_deserializer=proto__pb2.RestaurantMessage.FromString,
                )
        self.getRestaurantInfoByAddress = channel.unary_stream(
                '/sdccFoodDelivery.restaurantService/getRestaurantInfoByAddress',
                request_serializer=proto__pb2.RestaurantRequestAddress.SerializeToString,
                response_deserializer=proto__pb2.RestaurantMessage.FromString,
                )
        self.getRestaurantInfoByCity = channel.unary_stream(
                '/sdccFoodDelivery.restaurantService/getRestaurantInfoByCity',
                request_serializer=proto__pb2.RestaurantRequestCity.SerializeToString,
                response_deserializer=proto__pb2.RestaurantMessage.FromString,
                )
        self.getRestaurantInfoByTAG = channel.unary_stream(
                '/sdccFoodDelivery.restaurantService/getRestaurantInfoByTAG',
                request_serializer=proto__pb2.RestaurantRequestTAG.SerializeToString,
                response_deserializer=proto__pb2.RestaurantMessage.FromString,
                )
        self.getRestaurantMenu = channel.unary_stream(
                '/sdccFoodDelivery.restaurantService/getRestaurantMenu',
                request_serializer=proto__pb2.RestaurantRequestID.SerializeToString,
                response_deserializer=proto__pb2.RestaurantMessageMenu.FromString,
                )
        self.getAllRestaurants = channel.unary_stream(
                '/sdccFoodDelivery.restaurantService/getAllRestaurants',
                request_serializer=proto__pb2.RestaurantsRequest.SerializeToString,
                response_deserializer=proto__pb2.RestaurantMessage.FromString,
                )
        self.getRestaurantInfoById = channel.unary_unary(
                '/sdccFoodDelivery.restaurantService/getRestaurantInfoById',
                request_serializer=proto__pb2.RestaurantRequestID.SerializeToString,
                response_deserializer=proto__pb2.RestaurantMessage.FromString,
                )
        self.deleteRestaurant = channel.unary_unary(
                '/sdccFoodDelivery.restaurantService/deleteRestaurant',
                request_serializer=proto__pb2.DeleteRestaurantRequest.SerializeToString,
                response_deserializer=proto__pb2.CommitOK.FromString,
                )
        self.modifyRestaurant = channel.unary_unary(
                '/sdccFoodDelivery.restaurantService/modifyRestaurant',
                request_serializer=proto__pb2.ModifyRestaurantRequest.SerializeToString,
                response_deserializer=proto__pb2.CommitOK.FromString,
                )
        self.addRestaurant = channel.unary_unary(
                '/sdccFoodDelivery.restaurantService/addRestaurant',
                request_serializer=proto__pb2.AddRestaurantRequest.SerializeToString,
                response_deserializer=proto__pb2.CommitOK.FromString,
                )
        self.modifyRestaurantMenu = channel.unary_unary(
                '/sdccFoodDelivery.restaurantService/modifyRestaurantMenu',
                request_serializer=proto__pb2.ModifyRestaurantMenuRequest.SerializeToString,
                response_deserializer=proto__pb2.CommitOK.FromString,
                )


class restaurantServiceServicer(object):
    """-----------------Restaurant service-----------------

    """

    def getRestaurantInfoByName(self, request, context):
        """ask for a name restaurants infos
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getRestaurantInfoByAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getRestaurantInfoByCity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getRestaurantInfoByTAG(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getRestaurantMenu(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAllRestaurants(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getRestaurantInfoById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteRestaurant(self, request, context):
        """delete restaurant by id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def modifyRestaurant(self, request, context):
        """modify restaurant by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addRestaurant(self, request, context):
        """add new restaurant
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def modifyRestaurantMenu(self, request, context):
        """Modify restaurant's menu
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_restaurantServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getRestaurantInfoByName': grpc.unary_stream_rpc_method_handler(
                    servicer.getRestaurantInfoByName,
                    request_deserializer=proto__pb2.RestaurantRequestName.FromString,
                    response_serializer=proto__pb2.RestaurantMessage.SerializeToString,
            ),
            'getRestaurantInfoByAddress': grpc.unary_stream_rpc_method_handler(
                    servicer.getRestaurantInfoByAddress,
                    request_deserializer=proto__pb2.RestaurantRequestAddress.FromString,
                    response_serializer=proto__pb2.RestaurantMessage.SerializeToString,
            ),
            'getRestaurantInfoByCity': grpc.unary_stream_rpc_method_handler(
                    servicer.getRestaurantInfoByCity,
                    request_deserializer=proto__pb2.RestaurantRequestCity.FromString,
                    response_serializer=proto__pb2.RestaurantMessage.SerializeToString,
            ),
            'getRestaurantInfoByTAG': grpc.unary_stream_rpc_method_handler(
                    servicer.getRestaurantInfoByTAG,
                    request_deserializer=proto__pb2.RestaurantRequestTAG.FromString,
                    response_serializer=proto__pb2.RestaurantMessage.SerializeToString,
            ),
            'getRestaurantMenu': grpc.unary_stream_rpc_method_handler(
                    servicer.getRestaurantMenu,
                    request_deserializer=proto__pb2.RestaurantRequestID.FromString,
                    response_serializer=proto__pb2.RestaurantMessageMenu.SerializeToString,
            ),
            'getAllRestaurants': grpc.unary_stream_rpc_method_handler(
                    servicer.getAllRestaurants,
                    request_deserializer=proto__pb2.RestaurantsRequest.FromString,
                    response_serializer=proto__pb2.RestaurantMessage.SerializeToString,
            ),
            'getRestaurantInfoById': grpc.unary_unary_rpc_method_handler(
                    servicer.getRestaurantInfoById,
                    request_deserializer=proto__pb2.RestaurantRequestID.FromString,
                    response_serializer=proto__pb2.RestaurantMessage.SerializeToString,
            ),
            'deleteRestaurant': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteRestaurant,
                    request_deserializer=proto__pb2.DeleteRestaurantRequest.FromString,
                    response_serializer=proto__pb2.CommitOK.SerializeToString,
            ),
            'modifyRestaurant': grpc.unary_unary_rpc_method_handler(
                    servicer.modifyRestaurant,
                    request_deserializer=proto__pb2.ModifyRestaurantRequest.FromString,
                    response_serializer=proto__pb2.CommitOK.SerializeToString,
            ),
            'addRestaurant': grpc.unary_unary_rpc_method_handler(
                    servicer.addRestaurant,
                    request_deserializer=proto__pb2.AddRestaurantRequest.FromString,
                    response_serializer=proto__pb2.CommitOK.SerializeToString,
            ),
            'modifyRestaurantMenu': grpc.unary_unary_rpc_method_handler(
                    servicer.modifyRestaurantMenu,
                    request_deserializer=proto__pb2.ModifyRestaurantMenuRequest.FromString,
                    response_serializer=proto__pb2.CommitOK.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sdccFoodDelivery.restaurantService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class restaurantService(object):
    """-----------------Restaurant service-----------------

    """

    @staticmethod
    def getRestaurantInfoByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sdccFoodDelivery.restaurantService/getRestaurantInfoByName',
            proto__pb2.RestaurantRequestName.SerializeToString,
            proto__pb2.RestaurantMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getRestaurantInfoByAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sdccFoodDelivery.restaurantService/getRestaurantInfoByAddress',
            proto__pb2.RestaurantRequestAddress.SerializeToString,
            proto__pb2.RestaurantMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getRestaurantInfoByCity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sdccFoodDelivery.restaurantService/getRestaurantInfoByCity',
            proto__pb2.RestaurantRequestCity.SerializeToString,
            proto__pb2.RestaurantMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getRestaurantInfoByTAG(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sdccFoodDelivery.restaurantService/getRestaurantInfoByTAG',
            proto__pb2.RestaurantRequestTAG.SerializeToString,
            proto__pb2.RestaurantMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getRestaurantMenu(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sdccFoodDelivery.restaurantService/getRestaurantMenu',
            proto__pb2.RestaurantRequestID.SerializeToString,
            proto__pb2.RestaurantMessageMenu.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAllRestaurants(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sdccFoodDelivery.restaurantService/getAllRestaurants',
            proto__pb2.RestaurantsRequest.SerializeToString,
            proto__pb2.RestaurantMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getRestaurantInfoById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.restaurantService/getRestaurantInfoById',
            proto__pb2.RestaurantRequestID.SerializeToString,
            proto__pb2.RestaurantMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteRestaurant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.restaurantService/deleteRestaurant',
            proto__pb2.DeleteRestaurantRequest.SerializeToString,
            proto__pb2.CommitOK.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def modifyRestaurant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.restaurantService/modifyRestaurant',
            proto__pb2.ModifyRestaurantRequest.SerializeToString,
            proto__pb2.CommitOK.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def addRestaurant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.restaurantService/addRestaurant',
            proto__pb2.AddRestaurantRequest.SerializeToString,
            proto__pb2.CommitOK.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def modifyRestaurantMenu(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.restaurantService/modifyRestaurantMenu',
            proto__pb2.ModifyRestaurantMenuRequest.SerializeToString,
            proto__pb2.CommitOK.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class sdcc_user_serviceStub(object):
    """-----------------User service-----------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.save = channel.unary_unary(
                '/sdccFoodDelivery.sdcc_user_service/save',
                request_serializer=proto__pb2.UserInfoMessage.SerializeToString,
                response_deserializer=proto__pb2.BooleanMessage.FromString,
                )
        self.deleteByID = channel.unary_unary(
                '/sdccFoodDelivery.sdcc_user_service/deleteByID',
                request_serializer=proto__pb2.IDMessage.SerializeToString,
                response_deserializer=proto__pb2.BooleanMessage.FromString,
                )
        self.findByID = channel.unary_unary(
                '/sdccFoodDelivery.sdcc_user_service/findByID',
                request_serializer=proto__pb2.IDMessage.SerializeToString,
                response_deserializer=proto__pb2.UserMessage.FromString,
                )
        self.logIn = channel.unary_unary(
                '/sdccFoodDelivery.sdcc_user_service/logIn',
                request_serializer=proto__pb2.LogInMessage.SerializeToString,
                response_deserializer=proto__pb2.LogInResponse.FromString,
                )
        self.updateUsername = channel.unary_unary(
                '/sdccFoodDelivery.sdcc_user_service/updateUsername',
                request_serializer=proto__pb2.UpdateUsernameMessage.SerializeToString,
                response_deserializer=proto__pb2.BooleanMessage.FromString,
                )
        self.updatePassword = channel.unary_unary(
                '/sdccFoodDelivery.sdcc_user_service/updatePassword',
                request_serializer=proto__pb2.UpdatePasswordMessage.SerializeToString,
                response_deserializer=proto__pb2.BooleanMessage.FromString,
                )
        self.updateAddress = channel.unary_unary(
                '/sdccFoodDelivery.sdcc_user_service/updateAddress',
                request_serializer=proto__pb2.UpdateAddressMessage.SerializeToString,
                response_deserializer=proto__pb2.BooleanMessage.FromString,
                )
        self.updateMail = channel.unary_unary(
                '/sdccFoodDelivery.sdcc_user_service/updateMail',
                request_serializer=proto__pb2.UpdateMailMessage.SerializeToString,
                response_deserializer=proto__pb2.BooleanMessage.FromString,
                )
        self.updatePaymentMethod = channel.unary_unary(
                '/sdccFoodDelivery.sdcc_user_service/updatePaymentMethod',
                request_serializer=proto__pb2.UpdatePaymentMessage.SerializeToString,
                response_deserializer=proto__pb2.BooleanMessage.FromString,
                )
        self.updatePreferiti = channel.unary_unary(
                '/sdccFoodDelivery.sdcc_user_service/updatePreferiti',
                request_serializer=proto__pb2.UpdatePreferitiMessage.SerializeToString,
                response_deserializer=proto__pb2.BooleanMessage.FromString,
                )
        self.getUserPreferitiByID = channel.unary_stream(
                '/sdccFoodDelivery.sdcc_user_service/getUserPreferitiByID',
                request_serializer=proto__pb2.IDMessage.SerializeToString,
                response_deserializer=proto__pb2.PreferitiMessage.FromString,
                )


class sdcc_user_serviceServicer(object):
    """-----------------User service-----------------

    """

    def save(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteByID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findByID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def logIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateUsername(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updatePassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateMail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updatePaymentMethod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updatePreferiti(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getUserPreferitiByID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_sdcc_user_serviceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'save': grpc.unary_unary_rpc_method_handler(
                    servicer.save,
                    request_deserializer=proto__pb2.UserInfoMessage.FromString,
                    response_serializer=proto__pb2.BooleanMessage.SerializeToString,
            ),
            'deleteByID': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteByID,
                    request_deserializer=proto__pb2.IDMessage.FromString,
                    response_serializer=proto__pb2.BooleanMessage.SerializeToString,
            ),
            'findByID': grpc.unary_unary_rpc_method_handler(
                    servicer.findByID,
                    request_deserializer=proto__pb2.IDMessage.FromString,
                    response_serializer=proto__pb2.UserMessage.SerializeToString,
            ),
            'logIn': grpc.unary_unary_rpc_method_handler(
                    servicer.logIn,
                    request_deserializer=proto__pb2.LogInMessage.FromString,
                    response_serializer=proto__pb2.LogInResponse.SerializeToString,
            ),
            'updateUsername': grpc.unary_unary_rpc_method_handler(
                    servicer.updateUsername,
                    request_deserializer=proto__pb2.UpdateUsernameMessage.FromString,
                    response_serializer=proto__pb2.BooleanMessage.SerializeToString,
            ),
            'updatePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.updatePassword,
                    request_deserializer=proto__pb2.UpdatePasswordMessage.FromString,
                    response_serializer=proto__pb2.BooleanMessage.SerializeToString,
            ),
            'updateAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.updateAddress,
                    request_deserializer=proto__pb2.UpdateAddressMessage.FromString,
                    response_serializer=proto__pb2.BooleanMessage.SerializeToString,
            ),
            'updateMail': grpc.unary_unary_rpc_method_handler(
                    servicer.updateMail,
                    request_deserializer=proto__pb2.UpdateMailMessage.FromString,
                    response_serializer=proto__pb2.BooleanMessage.SerializeToString,
            ),
            'updatePaymentMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.updatePaymentMethod,
                    request_deserializer=proto__pb2.UpdatePaymentMessage.FromString,
                    response_serializer=proto__pb2.BooleanMessage.SerializeToString,
            ),
            'updatePreferiti': grpc.unary_unary_rpc_method_handler(
                    servicer.updatePreferiti,
                    request_deserializer=proto__pb2.UpdatePreferitiMessage.FromString,
                    response_serializer=proto__pb2.BooleanMessage.SerializeToString,
            ),
            'getUserPreferitiByID': grpc.unary_stream_rpc_method_handler(
                    servicer.getUserPreferitiByID,
                    request_deserializer=proto__pb2.IDMessage.FromString,
                    response_serializer=proto__pb2.PreferitiMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sdccFoodDelivery.sdcc_user_service', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class sdcc_user_service(object):
    """-----------------User service-----------------

    """

    @staticmethod
    def save(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.sdcc_user_service/save',
            proto__pb2.UserInfoMessage.SerializeToString,
            proto__pb2.BooleanMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deleteByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.sdcc_user_service/deleteByID',
            proto__pb2.IDMessage.SerializeToString,
            proto__pb2.BooleanMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.sdcc_user_service/findByID',
            proto__pb2.IDMessage.SerializeToString,
            proto__pb2.UserMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def logIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.sdcc_user_service/logIn',
            proto__pb2.LogInMessage.SerializeToString,
            proto__pb2.LogInResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateUsername(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.sdcc_user_service/updateUsername',
            proto__pb2.UpdateUsernameMessage.SerializeToString,
            proto__pb2.BooleanMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updatePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.sdcc_user_service/updatePassword',
            proto__pb2.UpdatePasswordMessage.SerializeToString,
            proto__pb2.BooleanMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.sdcc_user_service/updateAddress',
            proto__pb2.UpdateAddressMessage.SerializeToString,
            proto__pb2.BooleanMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateMail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.sdcc_user_service/updateMail',
            proto__pb2.UpdateMailMessage.SerializeToString,
            proto__pb2.BooleanMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updatePaymentMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.sdcc_user_service/updatePaymentMethod',
            proto__pb2.UpdatePaymentMessage.SerializeToString,
            proto__pb2.BooleanMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updatePreferiti(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.sdcc_user_service/updatePreferiti',
            proto__pb2.UpdatePreferitiMessage.SerializeToString,
            proto__pb2.BooleanMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getUserPreferitiByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sdccFoodDelivery.sdcc_user_service/getUserPreferitiByID',
            proto__pb2.IDMessage.SerializeToString,
            proto__pb2.PreferitiMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class sdcc_mail_serviceStub(object):
    """-----------------Mail service-----------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.sendMail = channel.unary_unary(
                '/sdccFoodDelivery.sdcc_mail_service/sendMail',
                request_serializer=proto__pb2.SendMailRequest.SerializeToString,
                response_deserializer=proto__pb2.BooleanMessage.FromString,
                )


class sdcc_mail_serviceServicer(object):
    """-----------------Mail service-----------------

    """

    def sendMail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_sdcc_mail_serviceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'sendMail': grpc.unary_unary_rpc_method_handler(
                    servicer.sendMail,
                    request_deserializer=proto__pb2.SendMailRequest.FromString,
                    response_serializer=proto__pb2.BooleanMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sdccFoodDelivery.sdcc_mail_service', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class sdcc_mail_service(object):
    """-----------------Mail service-----------------

    """

    @staticmethod
    def sendMail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.sdcc_mail_service/sendMail',
            proto__pb2.SendMailRequest.SerializeToString,
            proto__pb2.BooleanMessage.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class recommendationServiceStub(object):
    """-----------------Recommendation service-----------------

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getRecommendations = channel.unary_unary(
                '/sdccFoodDelivery.recommendationService/getRecommendations',
                request_serializer=proto__pb2.getRecommendationsRequest.SerializeToString,
                response_deserializer=proto__pb2.getRecommendationsResponse.FromString,
                )


class recommendationServiceServicer(object):
    """-----------------Recommendation service-----------------

    """

    def getRecommendations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_recommendationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getRecommendations': grpc.unary_unary_rpc_method_handler(
                    servicer.getRecommendations,
                    request_deserializer=proto__pb2.getRecommendationsRequest.FromString,
                    response_serializer=proto__pb2.getRecommendationsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sdccFoodDelivery.recommendationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class recommendationService(object):
    """-----------------Recommendation service-----------------

    """

    @staticmethod
    def getRecommendations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sdccFoodDelivery.recommendationService/getRecommendations',
            proto__pb2.getRecommendationsRequest.SerializeToString,
            proto__pb2.getRecommendationsResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
